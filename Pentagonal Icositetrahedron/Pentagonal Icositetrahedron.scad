// Auto-generated OpenSCAD file

    inner_points = 10*[[-0.9259432948547036, -0.7883300602910023, -0.6085238006475006], [0.9316330676551551, 0.7870922959996037, 0.6085238006475006], [0.36250103816029455, 0.5098673631148262, -1.209747431354714], [-0.3568112653598431, -0.5111051274062247, 1.209747431354714], [-0.925291724573977, 0.9854604731767459, 0.1401696762662029], [0.9309814973744285, -0.9866982374681444, -0.1401696762662029], [-0.35081411083503256, -0.4738360437094516, -1.1378078680695332], [0.7475860797536108, 1.0276898047752139, -0.17764490505050634], [-1.0402239996615512, -0.7119755434462155, 0.2226991520371504], [0.6548315763438759, 0.1556462537976566, 1.0927536210828892], [0.6286226019814043, -0.27949594840127423, -1.0836262019550489], [-0.08207562869002864, 1.0459363126489396, -0.7356131070950278], [-0.9214699538373878, 0.02506694532226054, 0.8880305328921074], [0.38630252614691507, -0.7939828381527229, 0.9312087761579693], [0.2535484845565542, -1.0882885695557658, -0.6306649426800235], [-0.13225569744300514, 1.2511346070530849, 0.24182007255132357], [-1.2578025702892264, 0.23051097979970356, -0.031030466067315354], [1.1478893287765803, -0.3958325458798192, 0.41987533619601525], [-1.142335225755677, 0.02525661844782449, -0.5757680801820015], [1.2636280128692259, 0.13758941904949432, 0.18692321005330162], [-0.24870288474090674, -1.2110682056034914, -0.3393406358503813], [0.1387896432282606, 1.0457466395233759, 0.7281855059790813], [-0.3808622889750699, 0.11342628220169892, -1.2179402354053859], [0.9274092622664456, 0.6530140820459664, -0.6012990736446909], [-0.6233917967576023, -0.9712038719577615, 0.5562448266580469], [0.08822436906712942, 0.20228797912729915, 1.2629944823920298], [-0.6487565981352699, 0.8917729367111666, -0.6501294178494864], [1.0455285670538481, -0.3379191756454047, -0.6653233552705532], [0.35590924627928633, -1.1462019397901804, 0.4545337487865449], [-0.7413016695969616, 0.5898726501416215, 0.8609190243334948], [-0.8112036224712066, 0.38477747893184816, -0.9123653780351495], [0.19874023606191676, 1.2413173043965122, -0.2506699692878106], [0.19803173285666142, -0.6874635433307503, -1.064782803832229], [1.207975591389785, 0.16907628213391382, -0.40308739508489017], [-1.2022858185893335, -0.1703140464253123, 0.40308739508489017], [-0.19234196005620996, 0.6862257790393518, 1.064782803832229], [-0.1930504632614653, -1.2425550686879105, 0.2506699692878106], [0.816893395271658, -0.3860152432232466, 0.9123653780351495]];

    outer_points = 10*[[0.9806319976418787, 0.937557877434195, 0.11306508493060516], [-0.9806319976418787, -0.937557877434195, -0.11306508493060516], [0.15593506052222017, 0.0, -1.352450316524903], [-0.15593506052222017, 0.0, 1.352450316524903], [0.931387536887417, -0.9871285773542707, 0.10738728821282113], [-0.931387536887417, 0.9871285773542707, -0.10738728821282113], [0.6724396256707068, 0.8636025894510981, -0.667556312445652], [-0.5028792674718967, -0.8636025894510981, -0.8030684421673696], [0.8022518938844309, 0.5463133160762306, 0.8375855612422387], [-0.971812252083241, -0.5463133160762306, 0.6330391933707828], [-0.2315356867889511, 0.6873689302788506, -1.057133431689357], [0.4660335533754072, -0.6873689302788506, -0.9767049676235087], [0.5467367873526419, -0.38601299296490404, 1.093475545031725], [-0.781234653939098, 0.38601299296490404, 0.9403628542811406], [-0.1420987476759442, 1.2519705115012292, -0.23662987386447693], [0.1922204067807485, -1.2519705115012292, -0.19808348369622714], [1.208416432900287, -0.23249067805347678, 0.3595743626562099], [-1.2585380920050915, 0.23249067805347678, 0.07513899490449419], [1.2687917596939955, 0.168266991141787, -0.07395676567795051], [-1.2186701005891911, -0.168266991141787, -0.36075659188275355], [0.20589975986114212, 1.2416489143855416, 0.24398601447453722], [-0.25602141896594643, -1.2416489143855416, 0.19072734308616685], [0.8000940891116665, 0.3510952800364424, -0.9381883957231318], [-0.5655962225252104, -0.3510952800364424, -1.0956500035897339], [0.2662235961126765, 0.66838455341131, 1.0611328845148649], [-0.5007214626991326, -0.66838455341131, 0.9727055147980009], [0.9426991492217683, -0.5915526261203796, -0.6363958811553354], [-0.7731387910229582, 0.5915526261203796, -0.8342288734576861], [-0.6274980486580776, 0.8929085634343263, 0.6727379944977034], [0.45793769045926747, -0.8929085634343263, 0.7978867601153181], [1.1243241920756009, -0.026951044898001153, -0.6154548442065362], [0.05800650685125809, -1.0464308783457534, -0.7383993329982691], [0.11155385134755201, 1.0464308783457534, -0.7322254216147525], [-0.9547638338767909, 0.026951044898001153, -0.8551699104064854], [0.9547638338767909, -0.026951044898001153, 0.8551699104064854], [-0.11155385134755201, -1.0464308783457534, 0.7322254216147525], [-0.05800650685125809, 1.0464308783457534, 0.7383993329982691], [-1.1243241920756009, 0.026951044898001153, 0.6154548442065362]];

    // Convex hull for inner set (I)
    module inner_hull() {
        hull() {
            for (p = inner_points) {
                translate(p) sphere(r=0.1);
            }
        }
    }

    // Convex hull for outer set (O) minus inner hull (O \ I)
    module outer_minus_inner() {
        difference() {
            hull() {
                for (p = outer_points) {
                    translate(p) sphere(r=0.1);
                }
            }
            inner_hull(); // Subtract inner hull
        }
    }

    // Convex hull for outer set (O) minus all translated inner hulls
    module outer_minus_AllTranslationInner() {
        difference() {
            hull() {
                for (p = outer_points) {
                    translate(p) sphere(r=0.1);
                }
            }
            hull() {
                translate([0,0,50]) inner_hull();
                translate([0,0,-50]) inner_hull();
            }; // Subtract translated inner hulls
        }
    }

    // Difference between outer_minus_inner and outer_minus_AllTranslationInner
    module outer_minus_inner_diff() {
        difference() {
            // Outer minus inner
            difference() {
                hull() {
                    for (p = outer_points) {
                        translate(p) sphere(r=0.1);
                    }
                }
                inner_hull();
            }

            // Subtract Outer minus AllTranslationInner
            difference() {
                hull() {
                    for (p = outer_points) {
                        translate(p) sphere(r=0.1);
                    }
                }
                hull() {
                    translate([0,0,50]) inner_hull();
                    translate([0,0,-50]) inner_hull();
                };
            }
        }
    }

    // Rendering all with colors applied
    // color([1, 0, 0, 0.5]) inner_hull(); // Transparent red
    // color([0, 0, 1, 1]) outer_minus_inner(); // Opaque blue
    color([1, 1, 0, 1]) outer_minus_inner_diff(); // Opaque yellow
    