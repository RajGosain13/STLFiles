// Auto-generated OpenSCAD file

    shift = 0;

    inner_points = 10*[[-0.04653735601242833, -1.1804350968444532, -1.1056406492993445],
  [-1.6166026037261467, 6.465865108477383e-14, 0.06804417958749302],
  [0.049641563947034416, -1.1066196143606377, 1.1793908313155077],
  [0.04653735601243055, 1.1804350968444688, 1.1056406492993445],
  [1.616602603726149, -4.9166964514920346e-14, -0.06804417958749302],
  [-0.049641563947032195, 1.1066196143606533, -1.1793908313155077],
  [-0.8306107268634214, -1.2969563212498596, -0.4960081752746857],
  [-1.2974190314728422, -0.9180843128618442, 0.30308256300708786],
  [-0.4826654868478813, -1.4854916227486177, 0.42235370875540656],
  [-0.8612909006373893, -0.6130277869576795, -1.2249117950476633],
  [-1.2686573637106064, -0.18853530149869363, 0.9864060636175853],
  [0.5164498685564554, -1.485491622748653, 0.38030009303373413],
  [0.7859918768627263, -1.2969563212499164, -0.5640523548621788],
  [-1.3470605954198756, 0.18853530149880124, -0.8763082683084198],
  [-0.4361281308354518, -0.30505652590415705, 1.527994358054751],
  [-0.7553117030887562, 0.6130277869577517, 1.2929559746351562],
  [1.318298927657642, -0.9180843128619364, 0.19298476769792233],
  [-0.5629872245688826, 0.3050565259042077, -1.4859407423330786],
  [0.8612909006373916, 0.613027786957695, 1.2249117950476633],
  [1.2686573637106087, 0.18853530149870912, -0.9864060636175853],
  [-0.5164498685564531, 1.4854916227486685, -0.38030009303373413],
  [-0.7859918768627241, 1.296956321249932, 0.5640523548621788],
  [1.3470605954198778, -0.18853530149878575, 0.8763082683084198],
  [0.43612813083545404, 0.3050565259041726, -1.527994358054751],
  [0.7553117030887584, -0.6130277869577362, -1.2929559746351562],
  [-1.3182989276576398, 0.9180843128619519, -0.19298476769792233],
  [0.5629872245688848, -0.30505652590419213, 1.4859407423330786],
  [0.8306107268634236, 1.2969563212498751, 0.4960081752746857],
  [1.2974190314728444, 0.9180843128618598, -0.30308256300708786],
  [0.4826654868478835, 1.4854916227486332, -0.42235370875540656]];

    outer_points_unshifted = 10*[[6.50114665913391e-07, 1.3763745554391253, 0.8506627251086194],
  [-1.051887261389621e-06, 0.8506627251088678, -1.3763745554387234],
  [1.6180339887494224, 0.0, -1.2365742555582488e-06],
  [-6.50114665913391e-07, -1.3763745554391253, -0.8506627251086194],
  [1.051887261389621e-06, -0.8506627251088678, 1.3763745554387234],
  [-1.6180339887494224, 0.0, 1.2365742555582488e-06],
  [0.5000000000100363, 1.5388417685299496, 1.2941252355854567e-05],
  [0.8090163442765206, 1.1135237293503313, -0.8506417857224506],
  [1.3090169943808583, 0.951056516259507, 7.233888893346937e-06],
  [-0.4999999999896717, 1.5388417685299496, 1.3705497275402664e-05],
  [0.8090159424835605, 0.26287747283842533, -1.376380262802186],
  [1.3090176444829382, 0.42531803917961825, 0.8506534904005509],
  [0.5000010518972977, 0.6881790434210817, 1.3763874966910794],
  [-0.8090176444729018, 1.1135237293503313, -0.850640549148195],
  [1.3090163442661924, -0.42531803917961825, -0.850655491219726],
  [0.4999989481024103, -0.6881790434210817, -1.3763882609359988],
  [0.8090180462658619, -0.26287747283842533, 1.3763790262279305],
  [-1.3090169943682723, 0.951056516259507, 9.234708068453283e-06],
  [0.4999999999896717, -1.5388417685299496, -1.3705497275402664e-05],
  [-0.8090159424835605, -0.26287747283842533, 1.376380262802186],
  [-1.3090176444829382, -0.42531803917961825, -0.8506534904005509],
  [-0.5000010518972977, -0.6881790434210817, -1.3763874966910794],
  [0.8090176444729018, -1.1135237293503313, 0.850640549148195],
  [-1.3090163442661924, 0.42531803917961825, 0.850655491219726],
  [-0.4999989481024103, 0.6881790434210817, 1.3763882609359988],
  [-0.8090180462658619, 0.26287747283842533, -1.3763790262279305],
  [1.3090169943682723, -0.951056516259507, -9.234708068453283e-06],
  [-0.5000000000100363, -1.5388417685299496, -1.2941252355854567e-05],
  [-0.8090163442765206, -1.1135237293503313, 0.8506417857224506],
  [-1.3090169943808583, -0.951056516259507, -7.233888893346937e-06]];
    
    outer_points = [for (p = outer_points_unshifted) [p[0], p[1], p[2] + shift]];

    // Convex hull for inner set (I)
    module inner_hull() {
        hull() {
            for (p = inner_points) {
                translate(p) sphere(r=0.1);
            }
        }
    }

    // Convex hull for outer set (O) minus inner hull (O \ I)
    module outer_minus_inner() {
        difference() {
            hull() {
                for (p = outer_points) {
                    translate(p) sphere(r=0.1);
                }
            }
            inner_hull(); // Subtract inner hull
        }
    }

    // Convex hull for outer set (O) minus all translated inner hulls
    module outer_minus_AllTranslationInner() {
        difference() {
            hull() {
                for (p = outer_points) {
                    translate(p) sphere(r=0.1);
                }
            }
            hull() {
                translate([0,0,50]) inner_hull();
                translate([0,0,-50]) inner_hull();
            }; // Subtract translated inner hulls
        }
    }

    // Difference between outer_minus_inner and outer_minus_AllTranslationInner
    module outer_minus_inner_diff() {
        difference() {
            // Outer minus inner
            difference() {
                hull() {
                    for (p = outer_points) {
                        translate(p) sphere(r=0.1);
                    }
                }
                inner_hull();
            }

            // Subtract Outer minus AllTranslationInner
            difference() {
                hull() {
                    for (p = outer_points) {
                        translate(p) sphere(r=0.1);
                    }
                }
                hull() {
                    translate([0,0,50]) inner_hull();
                    translate([0,0,-50]) inner_hull();
                };
            }
        }
    }

    // Rendering all with colors applied
    // color([1, 0, 0, 0.5]) inner_hull(); // Transparent red
    // color([0, 1, 0, 1]) outer_minus_AllTranslationInner(); // Opaque green
    color([1, 1, 0, 1]) outer_minus_inner_diff(); // Opaque yellow
    