// Auto-generated OpenSCAD file

    inner_points = 50*[[3.0282854772205288, -0.5746120397610971, -1.529535228743129], [-1.9570390816772223, 2.488720185113206, -1.3477536187106098], [1.9570390816772214, -2.488720185113205, 1.3477536187106098], [-3.0282854772205297, 0.5746120397610984, 1.529535228743129], [1.6491882886842126, 2.7570563880831456, -1.2324723141499903], [0.08412478963067203, 0.3400356492395892, -3.423078836481171], [-0.08412478963067273, -0.34003564923958784, 3.423078836481171], [-1.6491882886842135, -2.7570563880831447, 1.2324723141499903], [2.8067129791844274, 1.0087891365785524, 1.7160642977896399], [-0.27438704316396, 2.9020325703837075, 1.8284115113194153], [0.27438704316395934, -2.9020325703837067, -1.8284115113194153], [-2.8067129791844283, -1.008789136578551, -1.7160642977896399], [2.793992253010594, -0.7366978719134406, 0.5501480097562201], [-1.8859757024280626, 2.13900189043946, 0.7207952965656333], [1.8859757024280617, -2.139001890439459, -0.7207952965656333], [-2.793992253010595, 0.7366978719134419, -0.5501480097562201], [1.7073672208446276, 0.9044860907197378, -2.217787497007674], [-0.0802214718725859, 2.0029056584985505, -2.1526060335344295], [0.0802214718725852, -2.0029056584985496, 2.1526060335344295], [-1.7073672208446284, -0.9044860907197365, 2.217787497007674], [1.4993662816149618, 2.3909022063260266, 0.829015494635175], [-0.8778519101575467, -1.2803773767356506, -2.4983572790896065], [0.877851910157546, 1.2803773767356519, 2.4983572790896065], [-1.4993662816149627, -2.3909022063260257, -0.829015494635175], [2.6836061407130223, 1.1442811447947425, -0.37504405101045624], [-0.20877312200842071, 2.9215613393688296, -0.2695782276742873], [1.214404499523046, -1.124694419740917, -2.4314735184133838], [-1.6779747631983963, 0.6525857748331707, -2.326007695077215], [1.6779747631983954, -0.6525857748331694, 2.326007695077215], [-1.214404499523047, 1.1246944197409183, 2.4314735184133838], [0.20877312200842, -2.9215613393688287, 0.2695782276742873], [-2.683606140713023, -1.1442811447947412, 0.37504405101045624]];

    outer_points = 50*[[1.7170405994415567, -2.925385609292255, -0.5779797233161679], [1.6439459750532173, 2.925385609292255, -0.7614004280282365], [-1.6439459750532173, -2.925385609292255, 0.7614004280282365], [-1.7170405994415567, 2.925385609292255, 0.5779797233161679], [3.3884043056895363, 0.06101499591362604, 0.5959558500490982], [2.049786207575088, -0.06101499591362604, -2.7631184587813227], [-2.049786207575088, 0.06101499591362604, 2.7631184587813227], [-3.3884043056895363, -0.06101499591362604, -0.5959558500490982], [1.10555227148591, -1.7092633995307511, 2.774228316088349], [1.0603773092190094, 1.9067120739541168, 2.660868086335833], [-1.0603773092190094, -1.9067120739541168, -2.660868086335833], [-1.10555227148591, 1.7092633995307511, -2.774228316088349], [0.4226276221095006, -2.7108029257139314, 1.0605247229436006], [0.35401012372783297, 2.7816021311861725, 0.8883387378035981], [-0.35401012372783297, -2.7816021311861725, -0.8883387378035981], [-0.4226276221095006, 2.7108029257139314, -1.0605247229436006], [2.56565246249082, -1.0489560258770196, -0.9843261626589144], [2.5394429103320135, 1.0489560258770196, -1.050095356596011], [-2.5394429103320135, -1.0489560258770196, 1.050095356596011], [-2.56565246249082, 1.0489560258770196, 0.9843261626589144], [1.991618466078374, 0.09267736315140723, 2.162555453378865], [-0.04164554946986787, -0.09267736315140723, -2.939635326290048], [0.04164554946986787, 0.09267736315140723, 2.939635326290048], [-1.991618466078374, -0.09267736315140723, -2.162555453378865], [2.2270783360740483, -1.6399687421577454, 1.0012012318904389], [2.1846703898511866, 1.7545242629883189, 0.8947844406875329], [0.9704520663631402, -1.7545242629883189, -2.1521260870312755], [0.9280441201402786, 1.6399687421577454, -2.258542878234181], [-0.9280441201402786, -1.6399687421577454, 2.258542878234181], [-0.9704520663631402, 1.7545242629883189, 2.1521260870312755], [-2.1846703898511866, -1.7545242629883189, -0.8947844406875329], [-2.2270783360740483, 1.6399687421577454, -1.0012012318904389]];

    // Convex hull for inner set (I)
    module inner_hull() {
        hull() {
            for (p = inner_points) {
                translate(p) sphere(r=0.1);
            }
        }
    }

    // Convex hull for outer set (O) minus inner hull (O \ I)
    module outer_minus_inner() {
        difference() {
            hull() {
                for (p = outer_points) {
                    translate(p) sphere(r=0.1);
                }
            }
            inner_hull(); // Subtract inner hull
        }
    }

    // Convex hull for outer set (O) minus all translated inner hulls
    module outer_minus_AllTranslationInner() {
        difference() {
            hull() {
                for (p = outer_points) {
                    translate(p) sphere(r=0.1);
                }
            }
            hull() {
                translate([0,0,50]) inner_hull();
                translate([0,0,-50]) inner_hull();
            }; // Subtract translated inner hulls
        }
    }

    // Difference between outer_minus_inner and outer_minus_AllTranslationInner
    module outer_minus_inner_diff() {
        difference() {
            // Outer minus inner
            difference() {
                hull() {
                    for (p = outer_points) {
                        translate(p) sphere(r=0.1);
                    }
                }
                inner_hull();
            }

            // Subtract Outer minus AllTranslationInner
            difference() {
                hull() {
                    for (p = outer_points) {
                        translate(p) sphere(r=0.1);
                    }
                }
                hull() {
                    translate([0,0,50]) inner_hull();
                    translate([0,0,-50]) inner_hull();
                };
            }
        }
    }

    // Rendering all with colors applied
    // color([1, 0, 0, 0.5]) inner_hull(); // Transparent red
    // color([0, 0, 1, 1]) outer_minus_inner(); // Opaque blue
    // color([0, 1, 0, 1]) outer_minus_AllTranslationInner(); // Opaque green
    color([1, 1, 0, 1]) outer_minus_inner_diff(); // Opaque yellow
    